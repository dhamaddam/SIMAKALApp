"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[6751],{6751:(b,h,d)=>{d.d(h,{k:()=>f});var c=d(9862),g=d(553),p=d(6689),m=d(5819);let f=(()=>{class u{constructor(s,a){this.http=s,this.storage=a,this.getViewListContent=[{id:1,name:"Will Smith",gender:"Male",country:"USA",status:1},{id:2,name:"Jackline Joy",gender:"Female",country:"Sri Lanak",status:2},{id:3,name:"Alu Arjun",gender:"Male",country:"Microsoft",status:3},{id:4,name:"Kavitha Kumar",gender:"Female",country:"India",status:4},{id:5,name:"John Snow",gender:"Male",country:"United Kingdom",status:1},{id:6,name:"Priya kanana",gender:"Female",country:"India",status:2},{id:7,name:"Shri Devi",gender:"Female",country:"Sri Lanka",status:3},{id:8,name:"Richard Roy",gender:"Male",country:"France",status:4},{id:9,name:"Sonu Nigam",gender:"Male",country:"India",status:1},{id:10,name:"Priya Dutt",gender:"Female",country:"USA",status:2}],this.getInstalasi=[{id:"01",name:"IGD",full_name:"Instalasi Gawat Darurat",status:1},{id:"02",name:"Heamodialisa",full_name:"Heamodialisa",status:1},{id:"03",name:"Patologi Klinik",full_name:"Patologi Klinik",status:1},{id:"04",name:"Anggrek 1",full_name:"Anggrek 1",status:1},{id:"05",name:"Poli Kebidanan",full_name:"Poli Kebidanan",status:1}],this.baseUrl=g.N.baseUrl+"api/",this.key=g.N.key}getLogin(s,a){let n={email:s,password:a};const l={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key})};return new Promise((t,o)=>{this.http.post(this.baseUrl+"login",n,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("password incorect!"):404==e.status?console.log("password or Username incorect!"):console.log(e),o(e)})})}getNotification(s){const a={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${s}`})};return new Promise((n,l)=>{this.http.get(this.baseUrl+"notification",a).subscribe(t=>{n(JSON.stringify(t))},t=>{400==t.status?console.log("BAD REQUEST!"):401==t.status?console.log("password incorect!"):404==t.status?console.log("password or Username incorect!"):console.log(t),l(t)})})}uploadImage(s,a,n,l){const t={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${l}`})};return new Promise((o,e)=>{const i=new FormData;i.append("file",a,`image.${n}`),console.log("formData",i),this.http.post(this.baseUrl+"deviceDetail/updateCalibrationStatus?id="+s,i,t).subscribe(r=>{o(JSON.stringify(r))},r=>{e(r)})})}getAllAlatKesehatan(s){const a={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${s}`})};return new Promise((n,l)=>{this.http.get(this.baseUrl+"medicalDevice",a).subscribe(t=>{n(JSON.stringify(t))},t=>{400==t.status?console.log("BAD REQUEST!"):401==t.status?console.log("password incorect!"):404==t.status?console.log("password or Username incorect!"):console.log(t),l(t)})})}getAllAlatKesehatanById(s,a){const l={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((t,o)=>{this.http.get(this.baseUrl+"medicalDevice?id="+s,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("password incorect!"):404==e.status?console.log("password or Username incorect!"):console.log(e),o(e)})})}saveInputAlatKesehatan(s,a){const n={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return console.log("data saveInputAlatKesehatan",s[0]),new Promise((l,t)=>{this.http.post(this.baseUrl+"medicalDevice/create",s[0],n).subscribe(o=>{l(JSON.stringify(o))},o=>{400==o.status?console.log("BAD REQUEST!"):401==o.status?console.log("key incorect!"):404==o.status?console.log("Not Found"):console.log(o),t(o)})})}updateOneSignal(s,a){console.log("updateOneSignal idDevice",s);let n={one_signal:s};const l={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return console.log("data saveInputAlatKesehatan"),new Promise((t,o)=>{this.http.post(this.baseUrl+"updateOneSignal",n,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("key incorect!"):404==e.status?console.log("Not Found"):console.log(e),o(e)})})}updateAlatKesehatan(s,a,n){const l={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((t,o)=>{this.http.post(this.baseUrl+"medicalDevice/update?id="+s,a,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("key incorect!"):404==e.status?console.log("Not Found"):console.log(e),o(e)})})}updateAlatKesehatanCalibration(s,a,n){const l={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((t,o)=>{this.http.post(this.baseUrl+"deviceDetail/updateCalibrationStatus?id="+s,a,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("key incorect!"):404==e.status?console.log("Not Found"):console.log(e),o(e)})})}sendAndCreateNotificationMonitoring(s,a,n){let l={roles:["ADMIN","KSO","BPFK","KATIM"],title:"Notifikasi Status Alat "+s,link:"/menu/monitoring-alat",device_id:a.data.id,message:a.data.name+" dalam status "+a.data.monitoring_status};const t={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((o,e)=>{this.http.post(this.baseUrl+"notification/createForRoles",l,t).subscribe(i=>{o(JSON.stringify(i))},i=>{400==i.status?console.log("BAD REQUEST!"):401==i.status?console.log("key incorect!"):404==i.status?console.log("Not Found"):console.log(i),e(i)})})}sendAndCreateNotificationCalibration(s,a,n){console.log("data sendAndCreateNotificationCalibration",a),new Date(a.re_calibration);let t={roles:["ADMIN","BPFK","KSO"],title:"Notifikasi Kalibrasi Alat",link:"/menu/jadwal-kalibrasi",device_id:a.id,message:a.name+"data Diperbaharui dengan status "+a.calibration_status};const o={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((e,i)=>{this.http.post(this.baseUrl+"notification/createForRoles",t,o).subscribe(r=>{e(JSON.stringify(r))},r=>{400==r.status?console.log("BAD REQUEST!"):401==r.status?console.log("key incorect!"):404==r.status?console.log("Not Found"):console.log(r),i(r)})})}sendAndCreateNotificationBPFK(s,a){console.log("data sendAndCreateNotificationBPFK",s);var n=new Date(s.re_calibration);let l={roles:["BPFK","KSO"],title:"Notifikasi Kalibrasi Alat",link:"/menu/jadwal-kalibrasi",device_id:s.id,message:s.name+" Memasuki Tanggal Expired Untuk Dikalibrasi Ulang Tanggal "+n.toLocaleString("en-ID")};const t={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((o,e)=>{this.http.post(this.baseUrl+"notification/createForRoles",l,t).subscribe(i=>{o(JSON.stringify(i))},i=>{400==i.status?console.log("BAD REQUEST!"):401==i.status?console.log("key incorect!"):404==i.status?console.log("Not Found"):console.log(i),e(i)})})}sendAndCreateNotificationINSTALASI(s,a){console.log("data sendAndCreateNotificationBPFK",s);var n=new Date(s.re_calibration);let l={roles:["ADMIN","KSO"],title:"Notifikasi Kalibrasi Alat",link:"/menu/jadwal-kalibrasi",device_id:s.id,message:s.name+" Memasuki Tanggal Expired Untuk Dikalibrasi Ulang Tanggal "+n.toLocaleString("en-ID")};const t={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((o,e)=>{this.http.post(this.baseUrl+"notification/createForRoles",l,t).subscribe(i=>{o(JSON.stringify(i))},i=>{400==i.status?console.log("BAD REQUEST!"):401==i.status?console.log("key incorect!"):404==i.status?console.log("Not Found"):console.log(i),e(i)})})}deleteAlatByID(s,a){const n={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((l,t)=>{this.http.delete(this.baseUrl+"medicalDevice/delete?id="+s,n).subscribe(o=>{l(JSON.stringify(o))},o=>{400==o.status?console.log("BAD REQUEST!"):401==o.status?console.log("key incorect!"):404==o.status?console.log("Not Found"):console.log(o),t(o)})})}getDataDashboard(s){const a={headers:new c.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${s}`})};return new Promise((n,l)=>{this.http.get(this.baseUrl+"dashboard",a).subscribe(t=>{n(JSON.stringify(t))},t=>{400==t.status?console.log("BAD REQUEST!"):401==t.status?console.log("password incorect!"):404==t.status?console.log("password or Username incorect!"):console.log(t),l(t)})})}}return u.\u0275fac=function(s){return new(s||u)(p.LFG(c.eN),p.LFG(m.V))},u.\u0275prov=p.Yz7({token:u,factory:u.\u0275fac,providedIn:"root"}),u})()}}]);