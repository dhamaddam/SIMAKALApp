"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[5175,6751],{5175:(v,D,u)=>{u.d(D,{e:()=>a});var r=u(5861),_=u(4212),y=u.n(_),g=u(6689),b=u(5819),h=u(4670),A=u(7852),s=u(6751);let a=(()=>{class n{constructor(t,o,e,i,c){this.storage=t,this.router=o,this.alertController=e,this.loadingController=i,this.DB=c}login(t,o){var e=this;return(0,r.Z)(function*(){const i=yield e.loadingController.create();yield i.present(),e.DB.getLogin(t,o).then(function(){var c=(0,r.Z)(function*(p){const f=JSON.parse(p);if(console.log("data getLogin",f),"success"===f.meta.status){yield i.dismiss();let d=f.data.user;d.access_token=f.data.access_token,d.token_type=f.data.token_type,console.log("result",d),e.setUserData(JSON.stringify(d)),e.router.navigateByUrl("/menu/dashboard",{replaceUrl:!0}),y().getDeviceState(S=>{e.idDevice=S.userId,console.log("this.idDevice",e.idDevice),e.DB.updateOneSignal(e.idDevice,d.access_token).then(function(){var U=(0,r.Z)(function*(m){console.log("updateOneSignal",m)});return function(m){return U.apply(this,arguments)}}()).catch(function(){var U=(0,r.Z)(function*(m){throw console.log("error updateOneSignal",m),m});return function(m){return U.apply(this,arguments)}}())})}else"error"==f.meta.status?e.router.navigateByUrl("/login",{replaceUrl:!0}):(yield i.dismiss(),yield(yield e.alertController.create({header:"Login failed",message:"Mohon maaf akun Anda Belum di Verifikasi",buttons:["OK"]})).present())});return function(p){return c.apply(this,arguments)}}()).catch(function(){var c=(0,r.Z)(function*(p){throw yield i.dismiss(),console.log("status",p),p});return function(p){return c.apply(this,arguments)}}()),yield i.dismiss()})()}setUserData(t){this.storage.setStorage("uid",t)}setUserDeviceNotification(t){this.storage.setStorage("notication",t)}getUserDeviceNotificationData(){var t=this;return(0,r.Z)(function*(){return(yield t.storage.getStorage("notication")).value})()}getId(){var t=this;return(0,r.Z)(function*(){return(yield t.storage.getStorage("uid")).value})()}resetPassword(){}logout(){var t=this;return(0,r.Z)(function*(){return yield t.storage.removeStorage("uid")})()}}return n.\u0275fac=function(t){return new(t||n)(g.LFG(b.V),g.LFG(h.F0),g.LFG(A.Br),g.LFG(A.HT),g.LFG(s.k))},n.\u0275prov=g.Yz7({token:n,factory:n.\u0275fac,providedIn:"root"}),n})()},6751:(v,D,u)=>{u.d(D,{k:()=>b});var r=u(9862),_=u(553),y=u(6689),g=u(5819);let b=(()=>{class h{constructor(s,a){this.http=s,this.storage=a,this.getViewListContent=[{id:1,name:"Will Smith",gender:"Male",country:"USA",status:1},{id:2,name:"Jackline Joy",gender:"Female",country:"Sri Lanak",status:2},{id:3,name:"Alu Arjun",gender:"Male",country:"Microsoft",status:3},{id:4,name:"Kavitha Kumar",gender:"Female",country:"India",status:4},{id:5,name:"John Snow",gender:"Male",country:"United Kingdom",status:1},{id:6,name:"Priya kanana",gender:"Female",country:"India",status:2},{id:7,name:"Shri Devi",gender:"Female",country:"Sri Lanka",status:3},{id:8,name:"Richard Roy",gender:"Male",country:"France",status:4},{id:9,name:"Sonu Nigam",gender:"Male",country:"India",status:1},{id:10,name:"Priya Dutt",gender:"Female",country:"USA",status:2}],this.getInstalasi=[{id:"01",name:"IGD",full_name:"Instalasi Gawat Darurat",status:1},{id:"02",name:"Heamodialisa",full_name:"Heamodialisa",status:1},{id:"03",name:"Patologi Klinik",full_name:"Patologi Klinik",status:1},{id:"04",name:"Anggrek 1",full_name:"Anggrek 1",status:1},{id:"05",name:"Poli Kebidanan",full_name:"Poli Kebidanan",status:1}],this.baseUrl=_.N.baseUrl+"api/",this.key=_.N.key}getLogin(s,a){let n={email:s,password:a};const l={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key})};return new Promise((t,o)=>{this.http.post(this.baseUrl+"login",n,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("password incorect!"):404==e.status?console.log("password or Username incorect!"):console.log(e),o(e)})})}getNotification(s){const a={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${s}`})};return new Promise((n,l)=>{this.http.get(this.baseUrl+"notification",a).subscribe(t=>{n(JSON.stringify(t))},t=>{400==t.status?console.log("BAD REQUEST!"):401==t.status?console.log("password incorect!"):404==t.status?console.log("password or Username incorect!"):console.log(t),l(t)})})}uploadImage(s,a,n,l){const t={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${l}`})};return new Promise((o,e)=>{const i=new FormData;i.append("file",a,`image.${n}`),console.log("formData",i),this.http.post(this.baseUrl+"deviceDetail/updateCalibrationStatus?id="+s,i,t).subscribe(c=>{o(JSON.stringify(c))},c=>{e(c)})})}getAllAlatKesehatan(s){const a={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${s}`})};return new Promise((n,l)=>{this.http.get(this.baseUrl+"medicalDevice",a).subscribe(t=>{n(JSON.stringify(t))},t=>{400==t.status?console.log("BAD REQUEST!"):401==t.status?console.log("password incorect!"):404==t.status?console.log("password or Username incorect!"):console.log(t),l(t)})})}getAllAlatKesehatanById(s,a){const l={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((t,o)=>{this.http.get(this.baseUrl+"medicalDevice?id="+s,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("password incorect!"):404==e.status?console.log("password or Username incorect!"):console.log(e),o(e)})})}saveInputAlatKesehatan(s,a){const n={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return console.log("data saveInputAlatKesehatan",s[0]),new Promise((l,t)=>{this.http.post(this.baseUrl+"medicalDevice/create",s[0],n).subscribe(o=>{l(JSON.stringify(o))},o=>{400==o.status?console.log("BAD REQUEST!"):401==o.status?console.log("key incorect!"):404==o.status?console.log("Not Found"):console.log(o),t(o)})})}updateOneSignal(s,a){console.log("updateOneSignal idDevice",s);let n={one_signal:s};const l={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return console.log("data saveInputAlatKesehatan"),new Promise((t,o)=>{this.http.post(this.baseUrl+"updateOneSignal",n,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("key incorect!"):404==e.status?console.log("Not Found"):console.log(e),o(e)})})}updateAlatKesehatan(s,a,n){const l={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((t,o)=>{this.http.post(this.baseUrl+"medicalDevice/update?id="+s,a,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("key incorect!"):404==e.status?console.log("Not Found"):console.log(e),o(e)})})}updateAlatKesehatanCalibration(s,a,n){const l={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((t,o)=>{this.http.post(this.baseUrl+"deviceDetail/updateCalibrationStatus?id="+s,a,l).subscribe(e=>{t(JSON.stringify(e))},e=>{400==e.status?console.log("BAD REQUEST!"):401==e.status?console.log("key incorect!"):404==e.status?console.log("Not Found"):console.log(e),o(e)})})}sendAndCreateNotificationMonitoring(s,a,n){let l={roles:["ADMIN","KSO","BPFK","KATIM"],title:"Notifikasi Status Alat "+s,link:"/menu/monitoring-alat",device_id:a.data.id,message:a.data.name+" dalam status "+a.data.monitoring_status};const t={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((o,e)=>{this.http.post(this.baseUrl+"notification/createForRoles",l,t).subscribe(i=>{o(JSON.stringify(i))},i=>{400==i.status?console.log("BAD REQUEST!"):401==i.status?console.log("key incorect!"):404==i.status?console.log("Not Found"):console.log(i),e(i)})})}sendAndCreateNotificationCalibration(s,a,n){console.log("data sendAndCreateNotificationCalibration",a),new Date(a.re_calibration);let t={roles:["ADMIN","BPFK","KSO"],title:"Notifikasi Kalibrasi Alat",link:"/menu/jadwal-kalibrasi",device_id:a.id,message:a.name+"data Diperbaharui dengan status "+a.calibration_status};const o={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${n}`})};return new Promise((e,i)=>{this.http.post(this.baseUrl+"notification/createForRoles",t,o).subscribe(c=>{e(JSON.stringify(c))},c=>{400==c.status?console.log("BAD REQUEST!"):401==c.status?console.log("key incorect!"):404==c.status?console.log("Not Found"):console.log(c),i(c)})})}sendAndCreateNotificationBPFK(s,a){console.log("data sendAndCreateNotificationBPFK",s);var n=new Date(s.re_calibration);let l={roles:["BPFK","KSO"],title:"Notifikasi Kalibrasi Alat",link:"/menu/jadwal-kalibrasi",device_id:s.id,message:s.name+" Memasuki Tanggal Expired Untuk Dikalibrasi Ulang Tanggal "+n.toLocaleString("en-ID")};const t={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((o,e)=>{this.http.post(this.baseUrl+"notification/createForRoles",l,t).subscribe(i=>{o(JSON.stringify(i))},i=>{400==i.status?console.log("BAD REQUEST!"):401==i.status?console.log("key incorect!"):404==i.status?console.log("Not Found"):console.log(i),e(i)})})}sendAndCreateNotificationINSTALASI(s,a){console.log("data sendAndCreateNotificationBPFK",s);var n=new Date(s.re_calibration);let l={roles:["ADMIN","KSO"],title:"Notifikasi Kalibrasi Alat",link:"/menu/jadwal-kalibrasi",device_id:s.id,message:s.name+" Memasuki Tanggal Expired Untuk Dikalibrasi Ulang Tanggal "+n.toLocaleString("en-ID")};const t={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((o,e)=>{this.http.post(this.baseUrl+"notification/createForRoles",l,t).subscribe(i=>{o(JSON.stringify(i))},i=>{400==i.status?console.log("BAD REQUEST!"):401==i.status?console.log("key incorect!"):404==i.status?console.log("Not Found"):console.log(i),e(i)})})}deleteAlatByID(s,a){const n={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${a}`})};return new Promise((l,t)=>{this.http.delete(this.baseUrl+"medicalDevice/delete?id="+s,n).subscribe(o=>{l(JSON.stringify(o))},o=>{400==o.status?console.log("BAD REQUEST!"):401==o.status?console.log("key incorect!"):404==o.status?console.log("Not Found"):console.log(o),t(o)})})}getDataDashboard(s){const a={headers:new r.WM({"Content-Type":"application/json","x-api-key":this.key,Authorization:`Bearer ${s}`})};return new Promise((n,l)=>{this.http.get(this.baseUrl+"dashboard",a).subscribe(t=>{n(JSON.stringify(t))},t=>{400==t.status?console.log("BAD REQUEST!"):401==t.status?console.log("password incorect!"):404==t.status?console.log("password or Username incorect!"):console.log(t),l(t)})})}}return h.\u0275fac=function(s){return new(s||h)(y.LFG(r.eN),y.LFG(g.V))},h.\u0275prov=y.Yz7({token:h,factory:h.\u0275fac,providedIn:"root"}),h})()}}]);